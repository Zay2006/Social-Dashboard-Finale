"use strict";(()=>{var e={};e.id=654,e.ids=[654],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},57887:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>m,originalPathname:()=>A,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>P,staticGenerationBailout:()=>h});var a={};t.r(a),t.d(a,{POST:()=>POST}),t(78976);var s=t(10884),i=t(16132),n=t(95798),u=t(53524),o=t(62421),p=t.n(o);let c=new u.PrismaClient;async function POST(e){try{let{username:r,email:t,password:a}=await e.json();if(!r||!t||!a)return n.Z.json({message:"Missing required fields"},{status:400});let s=await c.user.findFirst({where:{OR:[{email:t},{username:r}]}});if(s)return n.Z.json({message:"User with this email or username already exists"},{status:400});let i=await p().hash(a,10),u=await c.user.create({data:{username:r,email:t,passwordHash:i},select:{id:!0,username:!0,email:!0,createdAt:!0}});return n.Z.json({message:"User created successfully",user:u},{status:201})}catch(e){return console.error("Signup error:",e),n.Z.json({message:"Internal server error"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/signup/route",pathname:"/api/auth/signup",filename:"route",bundlePath:"app/api/auth/signup/route"},resolvedPagePath:"C:\\Users\\iwrig\\Liftoff Projects\\Social-Dashboard-Finale\\src\\app\\api\\auth\\signup\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:P,serverHooks:g,headerHooks:m,staticGenerationBailout:h}=l,A="/api/auth/signup/route"},16132:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[449,804,798],()=>__webpack_exec__(57887));module.exports=t})();